plugins {
    id 'java'
    id 'maven-publish'
}

group = 'org.example.bigquery'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }
    mavenCentral()
//    maven {
//        url = uri('https://repository.apache.org/content/repositories/snapshots/')
//    }
}

dependencies {
    // Apache Beam's IcebergIO
    implementation "org.apache.beam:beam-sdks-java-io-iceberg:2.59.0-SNAPSHOT"
    implementation project(":utils")

    // runtime dependencies when writing to GCS
    runtimeOnly "org.yaml:snakeyaml:2.0"
    runtimeOnly "com.google.cloud.bigdataoss:gcs-connector:hadoop2-2.2.16"
    runtimeOnly "org.apache.hadoop:hadoop-client:2.10.2"

    // jar containing BigLakeCatalog, downloaded from gs://spark-lib/biglake/biglake-catalog-iceberg1.5.0-0.1.1-with-dependencies.jar
    implementation files("bigquerycatalog/iceberg-bigquery-catalog-iceberg1.5.2-0.1.0-with-dependencies.jar")
//    // a runtime dependency of BigLakeCatalog
//    runtimeOnly "org.apache.hive:hive-common:3.1.3"

    // to run the pipeline with direct runner
    runtimeOnly 'org.apache.beam:beam-runners-direct-java:2.59.0-SNAPSHOT'
    implementation 'org.apache.beam:beam-runners-google-cloud-dataflow-java:2.59.0-SNAPSHOT'
}

tasks.create(name:"execute", type:JavaExec) {
    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "NONE"
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
    args project.hasProperty("exec.args") ? project.getProperty("exec.args").split() : []
}
